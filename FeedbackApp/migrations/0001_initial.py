# Generated by Django 3.0.1 on 2019-12-30 09:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseId', models.CharField(max_length=15, verbose_name='Course Id')),
                ('courseName', models.CharField(max_length=150, verbose_name='Course Name')),
                ('semester', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departmentName', models.CharField(max_length=150, verbose_name='Department Name')),
            ],
        ),
        migrations.CreateModel(
            name='Principle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Principle')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=250, verbose_name='Question')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('semester', models.IntegerField(default=5)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Department')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId', models.CharField(max_length=50, verbose_name='User Id')),
                ('loginId', models.CharField(max_length=50, verbose_name='Login Id')),
                ('password', models.CharField(max_length=50, verbose_name='Password')),
                ('role', models.CharField(max_length=50, verbose_name='Role')),
                ('firstName', models.CharField(max_length=100, verbose_name='First Name')),
                ('lastName', models.CharField(max_length=100, verbose_name='Last Name')),
                ('middleName', models.CharField(blank=True, max_length=100, verbose_name='Middle Name')),
                ('salutation', models.CharField(blank=True, max_length=50, verbose_name='Salutation')),
            ],
        ),
        migrations.CreateModel(
            name='TIC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tic_name', models.CharField(max_length=120, verbose_name='Teacher Name')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('subject', models.ManyToManyField(related_name='subject_teachers', to='FeedbackApp.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(default=1)),
                ('studentId', models.CharField(max_length=20, verbose_name='Roll Number')),
                ('fname', models.CharField(max_length=120, verbose_name='First Name')),
                ('lname', models.CharField(max_length=120, verbose_name='Last Name')),
                ('mname', models.CharField(blank=True, max_length=120, verbose_name='Middle Name')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, verbose_name='User Name')),
                ('semester', models.IntegerField(default=1)),
                ('feedbackId', models.IntegerField(default=0)),
                ('avg_rating', models.IntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Department')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Teacher')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FeedbackApp.Department'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ManyToManyField(to='FeedbackApp.Subject'),
        ),
    ]
